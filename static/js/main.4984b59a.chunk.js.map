{"version":3,"sources":["components/TodoItem.js","redux/todo/todo.actions.js","redux/todo/todo.types.js","components/TodoList.js","components/TodoInput.js","redux/todo/todo.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["TodoItem","id","text","completed","dispatch","useDispatch","changeBackground","e","target","style","borderStyle","styled","textDecoration","backgroundColor","className","onMouseEnter","onMouseLeave","onClick","type","toggleTodo","deleteTodo","TodoList","list","useSelector","state","todo","map","key","TodoInput","useState","setText","handleSubmit","event","addTodo","preventDefault","onSubmit","placeholder","name","value","onChange","initalState","counter","action","filter","item","rootReducer","combineReducers","middleware","logger","store","createStore","applyMiddleware","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4984b59a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, toggleTodo } from \"../redux/todo/todo.actions\";\r\n\r\nconst TodoItem = ({ id, text, completed }) => {\r\n  const dispatch = useDispatch();\r\n  const changeBackground = (e, text) => {\r\n    e.target.style.borderStyle = text;\r\n    // e.target.style.backgroundColor = \"grey\";\r\n  };\r\n\r\n  const styled = {\r\n    textDecoration: completed ? \"line-through\" : \"none\",\r\n    backgroundColor: completed ? \"#A9A9A9\" : \"#ffffff\"\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const hanldeToggle = () => {\r\n    dispatch(toggleTodo(id));\r\n  };\r\n\r\n  return (\r\n    <li\r\n      style={styled}\r\n      className=\"list-group-item text-capitalize d-flex justify-content-between my-2\"\r\n    >\r\n      <h6>\r\n        {/* {id} : {text} */}\r\n        {text}\r\n\r\n      </h6>\r\n      <div className=\"todo-icon\">\r\n        <span className=\"mx-2 text-success\">\r\n          <i\r\n            className=\"fas fa-check-circle\"\r\n            onMouseEnter={e => changeBackground(e, \"groove\")}\r\n            onMouseLeave={e => changeBackground(e, \"none\")}\r\n            onClick={hanldeToggle}\r\n          />\r\n        </span>\r\n        <span className=\"mx-2 text-danger\">\r\n          <i\r\n            className=\"fas fa-trash\"\r\n            onMouseEnter={e => changeBackground(e, \"groove\")}\r\n            onMouseLeave={e => changeBackground(e, \"none\")}\r\n            onClick={handleDelete}\r\n          />\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import {\n  ADD_TODO,\n  CLEAR_TODO_LIST,\n  DELETE_TODO,\n  TOGGLE_TODO\n} from \"./todo.types\";\n\nexport const addTodo = text => {\n  return {\n    type: ADD_TODO,\n    text\n  };\n};\n\nexport const clearTodoList = () => {\n  return {\n    type: CLEAR_TODO_LIST\n  };\n};\n\nexport const deleteTodo = id => {\n  return {\n    type: DELETE_TODO,\n    id\n  };\n};\n\nexport const toggleTodo = id => {\n  return {\n    type: TOGGLE_TODO,\n    id\n  };\n};\n","export const ADD_TODO = \"ADD_TODO\";\nexport const CLEAR_TODO_LIST = \"CLEAR_TODO_LIST\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearTodoList } from \"../redux/todo/todo.actions\";\r\n\r\nconst TodoList = () => {\r\n  const { list } = useSelector(state => state.todo);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClearList = () => {\r\n    dispatch(clearTodoList());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group my-5 border border-light\">\r\n        <h3 className=\"text-capitalize text-center\">Kelvin Todo list</h3>\r\n        {list.map(todo => (\r\n          <TodoItem key={todo.id} {...todo} />\r\n        ))}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-danger btn-block text-capitalize mt-5\"\r\n        onClick={handleClearList}\r\n      >\r\n        clear list\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/todo/todo.actions\";\r\n\r\nconst TodoInput = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = event => {\r\n    if (text !== \"\") {\r\n      dispatch(addTodo(text));\r\n      setText(\"\");\r\n    } else {\r\n      // alert(\"cant not to empty text\");\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-body my-3\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <div className=\"input-group-text bg-primary text-white\">\r\n              <i className=\"fas fa-book\" />\r\n            </div>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control text-capitalize\"\r\n            placeholder=\"add a todo item\"\r\n            name=\"todo\"\r\n            value={text}\r\n            onChange={event => setText(event.target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-block btn-primary mt-3\"\r\n          onClick={handleSubmit}\r\n        >\r\n          add item\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n","import {\r\n  ADD_TODO,\r\n  CLEAR_TODO_LIST,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO\r\n} from \"./todo.types\";\r\n\r\nconst initalState = {\r\n  counter: 0,\r\n  list: [{ id: 0, text: \"Happy Hacking ~v~\", completed: false }]\r\n};\r\n\r\nconst todo = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return {\r\n        counter: state.counter + 1,\r\n        list: [\r\n          ...state.list,\r\n          { id: state.counter + 1, text: action.text, completed: false }\r\n        ]\r\n      };\r\n    case CLEAR_TODO_LIST:\r\n      return initalState;\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(item => item.id !== action.id)\r\n      };\r\n    case TOGGLE_TODO:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(todo =>\r\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todo;\r\n","import { combineReducers } from \"redux\";\r\n\r\n// import counter from \"./counter\";\r\nimport todo from \"./todo/todo.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todo\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\nimport logger from 'redux-logger'\n\nimport rootReducer from \"./rootReducer\";\n\n// define a array is more scalable to add or remove other middleware in the future\nconst middleware = [logger]\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport TodoList from \"./components/TodoList\";\nimport TodoInput from \"./components/TodoInput\";\n\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport store from './redux/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-10 mx-auto col-md-8 mt-4\">\n            {/* <h1 className=\"text-capitalize text-center\">Kelvin Todo List</h1> */}\n            <TodoInput />\n            <TodoList />\n          </div>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}